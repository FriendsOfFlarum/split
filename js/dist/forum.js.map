{"version":3,"sources":["webpack://@fof/split/webpack/bootstrap","webpack://@fof/split/external \"flarum.core.compat['extend']\"","webpack://@fof/split/external \"flarum.core.compat['app']\"","webpack://@fof/split/external \"flarum.core.compat['utils/Stream']\"","webpack://@fof/split/external \"flarum.core.compat['components/Button']\"","webpack://@fof/split/external \"flarum.core.compat['Model']\"","webpack://@fof/split/external \"flarum.core.compat['utils/PostControls']\"","webpack://@fof/split/external \"flarum.core.compat['components/CommentPost']\"","webpack://@fof/split/external \"flarum.core.compat['components/Modal']\"","webpack://@fof/split/external \"flarum.core.compat['components/EventPost']\"","webpack://@fof/split/external \"flarum.core.compat['components/Link']\"","webpack://@fof/split/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/split/./src/forum/components/SplitPostModal.js","webpack://@fof/split/./src/forum/components/SplitController.js","webpack://@fof/split/./src/forum/components/DiscussionSplit.js","webpack://@fof/split/./src/forum/index.js","webpack://@fof/split/./src/forum/addSplitControl.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","SplitPostModal","oninit","vnode","this","newDiscussionTitle","Stream","className","title","app","translator","trans","content","bidi","Button","type","loading","disabled","onsubmit","e","preventDefault","data","FormData","append","attrs","split","startPostId","post","number","request","method","url","forum","attribute","serialize","raw","body","then","discussion","id","slug","attributes","startUser","isUnread","hide","route","set","loaded","Modal","SplitController","reset","start","postId","postNumber","$","each","attr","show","end","endPostNumber","DiscussionSplit","icon","descriptionKey","descriptionData","count","target","href","EventPost","initializers","add","store","models","discussions","canSplit","Model","postComponents","discussionSplit","controller","splitController","extend","PostControls","items","contentType","onclick","CommentPost","modal","style","display"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['utils/Stream'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['utils/PostControls'];","module.exports = flarum.core.compat['components/CommentPost'];","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['components/EventPost'];","module.exports = flarum.core.compat['components/Link'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import Modal from 'flarum/components/Modal';\r\nimport Button from 'flarum/components/Button';\r\nimport Stream from 'flarum/utils/Stream';\r\n\r\nexport default class SplitPostModal extends Modal {\r\n    oninit(vnode) {\r\n        super.oninit(vnode);\r\n\r\n        this.newDiscussionTitle = Stream('');\r\n    }\r\n\r\n    className() {\r\n        return 'SplitPostModal Modal--small';\r\n    }\r\n\r\n    title() {\r\n        return app.translator.trans('fof-split.forum.modal.title');\r\n    }\r\n\r\n    content() {\r\n        return [\r\n            m('div', { className: 'Modal-body' }, [\r\n                m('div', { className: 'Form Form--centered' }, [\r\n                    m('div', { className: 'Form-group' }, [\r\n                        m('label', {}, app.translator.trans('fof-split.forum.modal.new_discussion_label')),\r\n                        m('input', {\r\n                            className: 'FormControl',\r\n                            name: 'new_discussion_title',\r\n                            bidi: this.newDiscussionTitle,\r\n                        }),\r\n                    ]),\r\n                    m('div', { className: 'Form-group' }, [\r\n                        m(\r\n                            Button,\r\n                            {\r\n                                className: 'Button Button--primary Button--block',\r\n                                type: 'submit',\r\n                                loading: this.loading,\r\n                                disabled: !this.newDiscussionTitle(),\r\n                            },\r\n                            app.translator.trans('fof-split.forum.modal.submit_button')\r\n                        ),\r\n                    ]),\r\n                ]),\r\n            ]),\r\n        ];\r\n    }\r\n\r\n    onsubmit(e) {\r\n        e.preventDefault();\r\n\r\n        this.loading = true;\r\n\r\n        const data = new FormData();\r\n\r\n        data.append('title', this.newDiscussionTitle());\r\n        data.append('start_post_id', this.attrs.split.startPostId);\r\n        data.append('end_post_number', this.attrs.post.number());\r\n\r\n        app.request({\r\n            method: 'POST',\r\n            url: app.forum.attribute('apiUrl') + '/split',\r\n            serialize: (raw) => raw,\r\n            body: data,\r\n        }).then((data) => {\r\n            let discussion = {};\r\n            discussion.id = Stream(data.data.id);\r\n            discussion.slug = Stream(data.data.attributes.slug);\r\n            discussion.startUser = Stream(data.data.attributes.startUser);\r\n            discussion.isUnread = Stream(data.data.attributes.isUnread);\r\n            this.hide();\r\n            m.route.set(app.route.discussion(discussion));\r\n        }, this.loaded.bind(this));\r\n    }\r\n}\r\n","export default class SplitController {\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    start(postId, postNumber) {\r\n        this.reset();\r\n\r\n        this.startPostId = postId;\r\n\r\n        $('.PostStream-item').each(function () {\r\n            if ($(this).attr('data-number') >= postNumber) {\r\n                $('.flagrow-split-endSplitButton', $(this)).show();\r\n            }\r\n        });\r\n\r\n        $('.flagrow-split-startSplitButton').hide();\r\n    }\r\n\r\n    end(postNumber) {\r\n        this.endPostNumber = postNumber;\r\n    }\r\n\r\n    reset() {\r\n        this.startPostId = null;\r\n        this.endPostNumber = null;\r\n    }\r\n}\r\n","import EventPost from 'flarum/components/EventPost';\r\nimport Link from 'flarum/components/Link';\r\n\r\nexport default class DiscussionSplit extends EventPost {\r\n    /**\r\n     * Get the name of the event icon.\r\n     *\r\n     * @return {String}\r\n     */\r\n    icon() {\r\n        return 'fas fa-code-branch';\r\n    }\r\n\r\n    /**\r\n     * Get the translation key for the description of the event.\r\n     *\r\n     * @return {String}\r\n     */\r\n    descriptionKey() {\r\n        if (this.attrs.post.content()['toNew']) {\r\n            return 'fof-split.forum.post.was_split_to';\r\n        }\r\n\r\n        return 'fof-split.forum.post.was_split_from';\r\n    }\r\n\r\n    /**\r\n     * Get the translation data for the description of the event.\r\n     *\r\n     * @return {Object}\r\n     */\r\n    descriptionData() {\r\n        return {\r\n            count: this.attrs.post.content()['count'],\r\n            target: (\r\n                <Link className=\"EventPost-Split-target\" href={this.attrs.post.content()['url']}>\r\n                    {this.attrs.post.content()['title']}\r\n                </Link>\r\n            ),\r\n        };\r\n    }\r\n}\r\n","import { extend } from 'flarum/extend';\r\nimport Model from 'flarum/Model';\r\n\r\nimport addSplitControl from './addSplitControl';\r\nimport SplitController from './components/SplitController';\r\nimport DiscussionSplit from './components/DiscussionSplit';\r\n\r\napp.initializers.add('flagrow-split', (app) => {\r\n    app.store.models.discussions.prototype.canSplit = Model.attribute('canSplit');\r\n\r\n    app.postComponents.discussionSplit = DiscussionSplit;\r\n\r\n    const splitController = new SplitController();\r\n\r\n    addSplitControl(splitController);\r\n});\r\n","import { extend } from 'flarum/extend';\r\nimport app from 'flarum/app';\r\nimport PostControls from 'flarum/utils/PostControls';\r\nimport Button from 'flarum/components/Button';\r\nimport CommentPost from 'flarum/components/CommentPost';\r\nimport SplitPostModal from './components/SplitPostModal';\r\n\r\nexport default function (controller) {\r\n    extend(PostControls, 'moderationControls', function (items, post) {\r\n        const discussion = post.discussion();\r\n\r\n        if (post.contentType() !== 'comment' || !discussion.canSplit() || post.number() == 1) return;\r\n\r\n        items.add('splitFrom', [\r\n            m(\r\n                Button,\r\n                {\r\n                    icon: 'fas fa-code-branch',\r\n                    className: 'flagrow-split-startSplitButton',\r\n                    onclick: () => {\r\n                        controller.start(post.id(), post.number());\r\n                    },\r\n                },\r\n                app.translator.trans('fof-split.forum.split.from')\r\n            ),\r\n        ]);\r\n    });\r\n\r\n    extend(CommentPost.prototype, 'footerItems', function (items) {\r\n        const post = this.attrs.post;\r\n        const discussion = post.discussion();\r\n\r\n        if (post.contentType() !== 'comment' || !discussion.canSplit() || post.number() == 1) return;\r\n\r\n        items.add('splitTo', [\r\n            m(\r\n                Button,\r\n                {\r\n                    icon: 'fas fa-code-branch',\r\n                    className: 'flagrow-split-endSplitButton Button Button--link',\r\n                    onclick: () => {\r\n                        app.modal.show(SplitPostModal, { split: controller, post: post });\r\n                    },\r\n                    style: { display: 'none' },\r\n                },\r\n                app.translator.trans('fof-split.forum.split.to')\r\n            ),\r\n        ]);\r\n    });\r\n}\r\n"],"sourceRoot":""}