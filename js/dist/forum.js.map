{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,+BCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,gB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,4B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,gC,aCAzC,SAASC,EAAgBhB,EAAGiB,GAKzC,OAJAD,EAAkBf,OAAOiB,eAAiBjB,OAAOiB,eAAeC,OAAS,SAAyBnB,EAAGiB,GAEnG,OADAjB,EAAEoB,UAAYH,EACPjB,CACR,EACMgB,EAAgBhB,EAAGiB,EAC3B,CCLc,SAASI,EAAeC,EAAUC,GAC/CD,EAASf,UAAYN,OAAOuB,OAAOD,EAAWhB,WAC9Ce,EAASf,UAAUkB,YAAcH,EACjCJ,EAAeI,EAAUC,EAC1B,CCLD,MAAM,EAA+BV,OAAOC,KAAKC,OAAO,2B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,uB,aCKnCW,EAAAA,SAAAA,G,oFACnBC,OAAA,SAAOC,GACL,YAAMD,OAAN,UAAaC,GAEbC,KAAKC,mBAAqBC,IAAO,GAClC,E,EAEDC,UAAA,WACE,MAAO,6BACR,E,EAEDC,MAAA,WACE,OAAOC,IAAAA,WAAAA,MAAqB,8BAC7B,E,EAEDC,QAAA,WACE,MAAO,CACLC,EAAE,MAAO,CAAEJ,UAAW,cAAgB,CACpCI,EAAE,MAAO,CAAEJ,UAAW,uBAAyB,CAC7CI,EAAE,MAAO,CAAEJ,UAAW,cAAgB,CACpCI,EAAE,QAAS,CAAC,EAAGF,IAAAA,WAAAA,MAAqB,+CACpCE,EAAE,QAAS,CACTJ,UAAW,cACXK,KAAM,uBACNC,KAAMT,KAAKC,uBAGfM,EAAE,MAAO,CAAEJ,UAAW,cAAgB,CACpCI,EACEG,IACA,CACEP,UAAW,uCACXQ,KAAM,SACNC,QAASZ,KAAKY,QACdC,UAAWb,KAAKC,sBAElBI,IAAAA,WAAAA,MAAqB,8CAMhC,E,EAEDS,SAAA,SAASC,GAAG,WACVA,EAAEC,iBAEFhB,KAAKY,SAAU,EAEf,IAAMK,EAAO,IAAIC,SAEjBD,EAAKE,OAAO,QAASnB,KAAKC,sBAC1BgB,EAAKE,OAAO,gBAAiBd,IAAAA,YAAAA,gBAAAA,aAC7BY,EAAKE,OAAO,kBAAmBnB,KAAKoB,MAAMC,KAAKC,UAE/CjB,IAAAA,QACW,CACPkB,OAAQ,OACRC,IAAKnB,IAAAA,MAAAA,UAAoB,UAAY,SACrCoB,UAAW,SAACC,GAAD,OAASA,CAAT,EACXC,KAAMV,IAEPW,MAAK,SAACX,GACL,IAAIY,EAAa,CAAC,EAElBA,EAAWC,GAAK5B,IAAOe,EAAKA,KAAKa,IACjCD,EAAWE,KAAO7B,IAAOe,EAAKA,KAAKe,WAAWD,MAC9CF,EAAWI,UAAY/B,IAAOe,EAAKA,KAAKe,WAAWC,WACnDJ,EAAWK,SAAWhC,IAAOe,EAAKA,KAAKe,WAAWE,UAElD7B,IAAAA,YAAAA,gBAAAA,QAEA,EAAK8B,OACL5B,EAAE6B,MAAMC,IAAIhC,IAAAA,MAAAA,WAAqBwB,GAClC,GAAE7B,KAAKsC,OAAOhD,KAAKU,MACvB,E,EA3EkBH,CAAuB0C,KCLvBC,EAAAA,WACnB,aACExC,KAAKyC,OACN,C,2BAEDC,MAAA,SAAMC,EAAQC,GACZ5C,KAAKyC,QAELzC,KAAK6C,YAAcF,EAEnBtC,IAAIyC,YAAYC,WAAY,EAC5B1C,IAAIyC,YAAYE,cAAgBJ,EAEhCrC,EAAE0C,QACH,E,EAEDC,IAAA,SAAIN,GACF5C,KAAKmD,cAAgBP,EAErBvC,IAAIyC,YAAYC,WAAY,CAC7B,E,EAEDN,MAAA,WACEzC,KAAK6C,YAAc,KACnB7C,KAAKmD,cAAgB,KAErB9C,IAAIyC,YAAYC,WAAY,EAC5B1C,IAAIyC,YAAYE,mBAAgBI,CACjC,E,EA5BkBZ,GCArB,MAAM,EAA+BxD,OAAOC,KAAKC,OAAO,+B,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,0B,aCGnCmE,EAAAA,SAAAA,G,oFAMnBC,KAAA,WACE,MAAO,oBACR,E,EAODC,eAAA,WACE,OAAIvD,KAAKoB,MAAMC,KAAKf,UAAhB,MACK,oCAGF,qCACR,E,EAODkD,gBAAA,WACE,MAAO,CACLC,MAAOzD,KAAKoB,MAAMC,KAAKf,UAAhB,MACPoD,OACE,EAAC,IAAD,CAAMvD,UAAU,yBAAyBwD,KAAM3D,KAAKoB,MAAMC,KAAKf,UAAhB,KAC5CN,KAAKoB,MAAMC,KAAKf,UAAhB,OAIR,E,EArCkB+C,CAAwBO,KCI7CvD,IAAAA,aAAAA,IAAqB,aAAa,SAACA,GACjCwD,OAAOxD,IAAIyC,YAAc,CACvBC,WAAW,EACXe,aAAc,CAAC,EACfC,gBAAiB,MAGnBF,OAAOxD,IAAIyC,YAAYiB,gBAAkB,IAAIvB,EAE7CnC,EAAI2D,MAAMC,OAAOC,YAAYxF,UAAUyF,SAAWC,IAAAA,UAAgB,YAElE/D,EAAIgE,eAAeC,gBAAkBjB,GCVrCkB,EAAAA,EAAAA,QAAOC,IAAc,sBAAsB,SAAUC,EAAOpD,GAC1D,IAAMQ,EAAaR,EAAKQ,aAEG,YAAvBR,EAAKqD,eAAgC7C,EAAWsC,YAA+B,GAAjB9C,EAAKC,WAElEjB,IAAAA,YAAAA,WACHoE,EAAME,IAAI,YAAa,CACrBpE,EACEG,IACA,CACE4C,KAAM,qBACNnD,UAAW,iCACXyE,QAAS,WACPvE,IAAAA,YAAAA,gBAAAA,MAAsCgB,EAAKS,KAAMT,EAAKC,SACvD,GAEHjB,IAAAA,WAAAA,MAAqB,iCAI5B,KAEDkE,EAAAA,EAAAA,QAAOM,IAAAA,UAAuB,UAAU,WACtC7E,KAAK8E,QAAQC,OAAM,kBAAM1E,IAAAA,YAAAA,SAAN,GACpB,KAEDkE,EAAAA,EAAAA,QAAOM,IAAAA,UAAuB,eAAe,SAAUJ,GACrD,IAAMpD,EAAOrB,KAAKoB,MAAMC,KAClBQ,EAAaR,EAAKQ,aAEG,YAAvBR,EAAKqD,eAAgC7C,EAAWsC,YAAgC,IAAlB9C,EAAKC,UAEnEjB,IAAAA,YAAAA,WAA6BgB,EAAKC,UAAYjB,IAAAA,YAAAA,eAChDoE,EAAME,IAAI,UAAW,CACnB,EAAC,IAAD,CACErB,KAAK,qBACLnD,UAAU,mDACVyE,QAAS,WACPvE,IAAAA,MAAAA,KAAeR,EAAgB,CAC7BwB,KAAMA,GAET,GAEAhB,IAAAA,WAAAA,MAAqB,6BAExB,EAAC,IAAD,CACEiD,KAAK,eACLnD,UAAU,sDACVyE,QAAS,WACPvE,IAAAA,YAAAA,gBAAAA,QACAE,EAAE0C,QACH,GAEA5C,IAAAA,WAAAA,MAAqB,kCAI7B,GD5CF,G","sources":["webpack://@fof/split/webpack/bootstrap","webpack://@fof/split/webpack/runtime/compat get default export","webpack://@fof/split/webpack/runtime/define property getters","webpack://@fof/split/webpack/runtime/hasOwnProperty shorthand","webpack://@fof/split/webpack/runtime/make namespace object","webpack://@fof/split/external root \"flarum.core.compat['forum/app']\"","webpack://@fof/split/external root \"flarum.core.compat['common/Model']\"","webpack://@fof/split/external root \"flarum.core.compat['common/extend']\"","webpack://@fof/split/external root \"flarum.core.compat['forum/utils/PostControls']\"","webpack://@fof/split/external root \"flarum.core.compat['common/components/Button']\"","webpack://@fof/split/external root \"flarum.core.compat['forum/components/CommentPost']\"","webpack://@fof/split/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/split/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/split/external root \"flarum.core.compat['common/components/Modal']\"","webpack://@fof/split/external root \"flarum.core.compat['common/utils/Stream']\"","webpack://@fof/split/./src/forum/components/SplitPostModal.js","webpack://@fof/split/./src/forum/SplitController.js","webpack://@fof/split/external root \"flarum.core.compat['common/components/EventPost']\"","webpack://@fof/split/external root \"flarum.core.compat['common/components/Link']\"","webpack://@fof/split/./src/forum/components/DiscussionSplit.js","webpack://@fof/split/./src/forum/index.js","webpack://@fof/split/./src/forum/addSplitControl.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/utils/PostControls'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Button'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/CommentPost'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Modal'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/Stream'];","import app from 'flarum/forum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport Stream from 'flarum/common/utils/Stream';\n\nexport default class SplitPostModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    this.newDiscussionTitle = Stream('');\n  }\n\n  className() {\n    return 'SplitPostModal Modal--small';\n  }\n\n  title() {\n    return app.translator.trans('fof-split.forum.modal.title');\n  }\n\n  content() {\n    return [\n      m('div', { className: 'Modal-body' }, [\n        m('div', { className: 'Form Form--centered' }, [\n          m('div', { className: 'Form-group' }, [\n            m('label', {}, app.translator.trans('fof-split.forum.modal.new_discussion_label')),\n            m('input', {\n              className: 'FormControl',\n              name: 'new_discussion_title',\n              bidi: this.newDiscussionTitle,\n            }),\n          ]),\n          m('div', { className: 'Form-group' }, [\n            m(\n              Button,\n              {\n                className: 'Button Button--primary Button--block',\n                type: 'submit',\n                loading: this.loading,\n                disabled: !this.newDiscussionTitle(),\n              },\n              app.translator.trans('fof-split.forum.modal.submit_button')\n            ),\n          ]),\n        ]),\n      ]),\n    ];\n  }\n\n  onsubmit(e) {\n    e.preventDefault();\n\n    this.loading = true;\n\n    const data = new FormData();\n\n    data.append('title', this.newDiscussionTitle());\n    data.append('start_post_id', app.__fof_split.splitController.startPostId);\n    data.append('end_post_number', this.attrs.post.number());\n\n    app\n      .request({\n        method: 'POST',\n        url: app.forum.attribute('apiUrl') + '/split',\n        serialize: (raw) => raw,\n        body: data,\n      })\n      .then((data) => {\n        let discussion = {};\n\n        discussion.id = Stream(data.data.id);\n        discussion.slug = Stream(data.data.attributes.slug);\n        discussion.startUser = Stream(data.data.attributes.startUser);\n        discussion.isUnread = Stream(data.data.attributes.isUnread);\n\n        app.__fof_split.splitController.reset();\n\n        this.hide();\n        m.route.set(app.route.discussion(discussion));\n      }, this.loaded.bind(this));\n  }\n}\n","export default class SplitController {\n  constructor() {\n    this.reset();\n  }\n\n  start(postId, postNumber) {\n    this.reset();\n\n    this.startPostId = postId;\n\n    app.__fof_split.splitting = true;\n    app.__fof_split.splittingFrom = postNumber;\n\n    m.redraw();\n  }\n\n  end(postNumber) {\n    this.endPostNumber = postNumber;\n\n    app.__fof_split.splitting = false;\n  }\n\n  reset() {\n    this.startPostId = null;\n    this.endPostNumber = null;\n\n    app.__fof_split.splitting = false;\n    app.__fof_split.splittingFrom = undefined;\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/EventPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/components/Link'];","import EventPost from 'flarum/common/components/EventPost';\nimport Link from 'flarum/common/components/Link';\n\nexport default class DiscussionSplit extends EventPost {\n  /**\n   * Get the name of the event icon.\n   *\n   * @return {String}\n   */\n  icon() {\n    return 'fas fa-code-branch';\n  }\n\n  /**\n   * Get the translation key for the description of the event.\n   *\n   * @return {String}\n   */\n  descriptionKey() {\n    if (this.attrs.post.content()['toNew']) {\n      return 'fof-split.forum.post.was_split_to';\n    }\n\n    return 'fof-split.forum.post.was_split_from';\n  }\n\n  /**\n   * Get the translation data for the description of the event.\n   *\n   * @return {Object}\n   */\n  descriptionData() {\n    return {\n      count: this.attrs.post.content()['count'],\n      target: (\n        <Link className=\"EventPost-Split-target\" href={this.attrs.post.content()['url']}>\n          {this.attrs.post.content()['title']}\n        </Link>\n      ),\n    };\n  }\n}\n","import app from 'flarum/forum/app';\nimport Model from 'flarum/common/Model';\n\nimport addSplitControl from './addSplitControl';\nimport SplitController from './SplitController';\nimport DiscussionSplit from './components/DiscussionSplit';\n\napp.initializers.add('fof-split', (app) => {\n  window.app.__fof_split = {\n    splitting: false,\n    showSplitTos: {},\n    splitController: null,\n  };\n\n  window.app.__fof_split.splitController = new SplitController();\n\n  app.store.models.discussions.prototype.canSplit = Model.attribute('canSplit');\n\n  app.postComponents.discussionSplit = DiscussionSplit;\n\n  addSplitControl();\n});\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport PostControls from 'flarum/forum/utils/PostControls';\nimport Button from 'flarum/common/components/Button';\nimport CommentPost from 'flarum/forum/components/CommentPost';\nimport SplitPostModal from './components/SplitPostModal';\n\nexport default function () {\n  extend(PostControls, 'moderationControls', function (items, post) {\n    const discussion = post.discussion();\n\n    if (post.contentType() !== 'comment' || !discussion.canSplit() || post.number() == 1) return;\n\n    if (!app.__fof_split.splitting) {\n      items.add('splitFrom', [\n        m(\n          Button,\n          {\n            icon: 'fas fa-code-branch',\n            className: 'flagrow-split-startSplitButton',\n            onclick: () => {\n              app.__fof_split.splitController.start(post.id(), post.number());\n            },\n          },\n          app.translator.trans('fof-split.forum.split.from')\n        ),\n      ]);\n    }\n  });\n\n  extend(CommentPost.prototype, 'oninit', function () {\n    this.subtree.check(() => app.__fof_split.splitting);\n  });\n\n  extend(CommentPost.prototype, 'footerItems', function (items) {\n    const post = this.attrs.post;\n    const discussion = post.discussion();\n\n    if (post.contentType() !== 'comment' || !discussion.canSplit() || post.number() === 1) return;\n\n    if (app.__fof_split.splitting && post.number() >= app.__fof_split.splittingFrom) {\n      items.add('splitTo', [\n        <Button\n          icon=\"fas fa-code-branch\"\n          className=\"flagrow-split-endSplitButton Button Button--link\"\n          onclick={() => {\n            app.modal.show(SplitPostModal, {\n              post: post,\n            });\n          }}\n        >\n          {app.translator.trans('fof-split.forum.split.to')}\n        </Button>,\n        <Button\n          icon=\"fas fa-times\"\n          className=\"flagrow-split-cancelSplitButton Button Button--link\"\n          onclick={() => {\n            app.__fof_split.splitController.reset();\n            m.redraw();\n          }}\n        >\n          {app.translator.trans('fof-split.forum.split.cancel')}\n        </Button>,\n      ]);\n    }\n  });\n}\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_setPrototypeOf","p","setPrototypeOf","bind","__proto__","_inheritsLoose","subClass","superClass","create","constructor","SplitPostModal","oninit","vnode","this","newDiscussionTitle","Stream","className","title","app","content","m","name","bidi","Button","type","loading","disabled","onsubmit","e","preventDefault","data","FormData","append","attrs","post","number","method","url","serialize","raw","body","then","discussion","id","slug","attributes","startUser","isUnread","hide","route","set","loaded","Modal","SplitController","reset","start","postId","postNumber","startPostId","__fof_split","splitting","splittingFrom","redraw","end","endPostNumber","undefined","DiscussionSplit","icon","descriptionKey","descriptionData","count","target","href","EventPost","window","showSplitTos","splitController","store","models","discussions","canSplit","Model","postComponents","discussionSplit","extend","PostControls","items","contentType","add","onclick","CommentPost","subtree","check"],"sourceRoot":""}